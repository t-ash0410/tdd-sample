name: Build and Deploy Container
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy-to-cloud-run.yml"
      - "backend/**"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  REGION: us-central1
  DOCKER_IMAGE_REGISTRY: us-central1-docker.pkg.dev
  # RPC_SERVICE: tdd-sample-rpc
  # RPC_IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/tdd-sample-repository/tdd-sample-rpc:${{ github.sha }}
  MOCK_SERVICE: tdd-sample-mock
  MOCK_IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/tdd-sample-repository/tdd-sample-mock:${{ github.sha }}
  REST_SERVICE: tdd-sample-rest
  REST_IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/tdd-sample-repository/tdd-sample-rest:${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Test cmd
        run: |-
          cd backend/cmd
          go mod tidy
          go test -v ./...

      - name: Test internal
        run: |-
          cd backend/internal
          go mod tidy
          go test -v ./...

      - name: Test pkg
        run: |-
          cd backend/pkg
          go mod tidy
          go test -v ./...

      - name: Test proto
        run: |-
          cd backend/proto
          go mod tidy
          go test -v ./...

  deploy-mock:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ env.DOCKER_IMAGE_REGISTRY }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build Program
        working-directory: ./backend/cmd
        run: |-
          go mod tidy
          go build -o ../build/prod/mock/mock mock/main.go

      - name: Build Container
        working-directory: ./backend/build/prod/mock
        run: |-
          docker build . -t ${{ env.MOCK_IMAGE }}
          docker push ${{ env.MOCK_IMAGE }}

      - name: Build And Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@main
        with:
          credentials: ${{ secrets.GCP_SA_KEY }}
          image: ${{ env.MOCK_IMAGE }}
          service: ${{ env.MOCK_SERVICE }}

  deploy-rest:
    runs-on: ubuntu-latest
    needs: deploy-mock
    steps:
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ env.DOCKER_IMAGE_REGISTRY }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build Program
        working-directory: ./backend/cmd
        run: |-
          go mod tidy
          go build -o ../build/prod/rest/rest rest/main.go

      - name: Build Container
        working-directory: ./backend/build/prod/rest
        run: |-
          docker build . -t ${{ env.REST_IMAGE }}
          docker push ${{ env.REST_IMAGE }}

      - name: Replace Mock Url Protocol
        id: create-rpc-url
        run: |-
          url="${output_url#https://}"
          echo $url
          echo "::set-output name=OUTPUT_URL::$url"
        env:
          output_url: ${{ needs.deploy-mock.outputs.url }}

      - name: Build And Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.4.0
        with:
          credentials: ${{ secrets.GCP_SA_KEY }}
          image: ${{ env.REST_IMAGE }}
          service: ${{ env.REST_SERVICE }}
          env_vars: RPC_SERVER_NAME=${{ steps.create-rpc-url.outputs.OUTPUT_URL }}:443
